{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridIteam.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridIteam","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","classname","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uKAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,kDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCGPO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCFCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECLwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKzB,CAACpB,IAGGqB,EDjBiBK,CAAa1B,GAA7BO,EAAR,EAAQA,KAAKa,EAAb,EAAaA,QAWb,OACI,qCACI,qBAAIO,UAAY,yCAAhB,eAA6D3B,EAA7D,OACEoB,EAAU,cAAgB,GACxB,qBAAKJ,UAAW,YAAhB,SAGYT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEvB7BiB,EAAe,WAKxB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,8CACI,cAAC,EAAD,CAAaA,cAAkBA,IACnC,uBAEA,6BAEQ4C,EAAWpB,KAAM,SAAAT,GAAQ,OAEzB,aADA,CACC,EAAD,CAEAA,SAAWA,GADLA,Y,MCnB1B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d8169b56.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        \n       if ( inputValue.trim().length > 2 ) { \n            setCategories( cats => [ inputValue, ...cats]);\n            setInputValue('');\n        }\n    } \n \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export const getGifs = async( category ) => {\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q==${encodeURI(category)}&api_key=uVCLPITwo7U6tw292VbcRz95cDikzSWK&limit=10`\n\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n\n    return gifs;\n\n}\n\n    \n\n\n\n\n\n","\nimport React from 'react'\n\nexport const GifGridIteam = ({ title, url }) => {\n\n    return (\n        <div className =\"card animate__animated animate__bounce\">\n            <img src={ url } alt={ title } />\n            <p> {title} </p>\n        </div>\n    )\n}\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridIteam } from './GifGridIteam';\n\n\nexport const GifGrid = ({category}) => { \n\n    const { data,loading} = useFetchGifs(category);\n\n    \n    // useEffect( () => {\n    //     getGifs ( category )\n    //         .then( setImages );\n    // }, [ category ])\n    \n    \n    // getGifs(); \n\n    return (\n        <>\n            <h3 classname = \"card animate__animated animate__bounce\">  { category } </h3>\n            { loading ? 'Cargando...' : ''}\n                <div className =\"card-grid\">\n             \n                        {\n                            data.map( img => (\n                                <GifGridIteam \n                                key={ img.id }\n                                { ...img }  \n                                />\n                            ))\n                        }\n\n                 </div>\n        </>\n        \n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( ( ) => {\n\n        getGifs (category)\n            .then( imgs => {\n\n                    setstate({\n                        data: imgs,\n                        loading:false\n                    });\n\n            })\n\n    }, [category])\n\n\n    return state; // { data[], loading: true };\n\n}\n","\nimport React, { useState } from 'react'\nimport { AddCategory } from './componentes/AddCategory';\nimport { GifGrid } from './componentes/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    \n\n    // const categories = [\"One Punch\",\"Samurai X\",\"Dragon Ball\"];\n    const [categories, setCategories] = useState(['Sailor Moon']);\n\n    //Boton\n    // const handleAdd = () => {\n    //     // setCategories ( [...categories, \"Sailor Moon\"])\n    //     setCategories( cats => [ ...cats, \"HunterXHunter\"]);}\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n                <AddCategory setCategories = { setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(( category => \n                    // <li key={category}> {category} </li>\n                    <GifGrid \n                    key={ category }\n                    category={ category } />\n                    ))\n                    \n                }\n\n                \n            </ol>\n\n        </> \n\n    )\n}\n                          ","\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}